{"ast":null,"code":"import { WRAP_MODES } from '@pixi/core';\nimport { Mesh, MeshMaterial } from '@pixi/mesh';\nimport { RopeGeometry } from './geometry/RopeGeometry.mjs';\nclass SimpleRope extends Mesh {\n  constructor(texture, points) {\n    let textureScale = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    const ropeGeometry = new RopeGeometry(texture.height, points, textureScale);\n    const meshMaterial = new MeshMaterial(texture);\n    if (textureScale > 0) {\n      texture.baseTexture.wrapMode = WRAP_MODES.REPEAT;\n    }\n    super(ropeGeometry, meshMaterial);\n    this.autoUpdate = true;\n  }\n  _render(renderer) {\n    const geometry = this.geometry;\n    if (this.autoUpdate || geometry._width !== this.shader.texture.height) {\n      geometry._width = this.shader.texture.height;\n      geometry.update();\n    }\n    super._render(renderer);\n  }\n}\nexport { SimpleRope };","map":{"version":3,"mappings":";;;AAiBO,MAAMA,mBAAmBC,IAChC;EAWIC,WAAYA,UAAkBC,MAAkB,EAChD;IAAA,IADgDC,mFAAe,CAC/D;IACI,MAAMC,eAAe,IAAIC,aAAaC,OAAQ,SAAQJ,QAAQC,YAAY;IACpE,qBAAe,IAAII,aAAaD,OAAO;IAE7C,IAAIH,eAAe,CACnB;MAEYG,oBAAYE,WAAWC,UAAW;IAAA;IAE9C,MAAML,cAAcM,YAAY;IAMhC,KAAKC,UAAa;EAAA;EAGtBC,QAAQC,QACR;IACI,MAAMC,WAAyB,IAAK;IAEpC,IAAI,KAAKH,UAAc,aAASI,WAAW,IAAK,QAAOT,QAAQU,MAC/D;MACaF,kBAAS,IAAK,QAAOR,OAAQ;MACtCQ,SAASG,MAAO;IAAA;IAGpB,MAAML,QAAQC,QAAQ;EAAA;AAE9B","names":["SimpleRope","Mesh","constructor","points","textureScale","ropeGeometry","RopeGeometry","texture","MeshMaterial","wrapMode","WRAP_MODES","meshMaterial","autoUpdate","_render","renderer","geometry","_width","height","update"],"sources":["/workspaces/royalgames/royalgamesclient-main/node_modules/@pixi/mesh-extras/src/SimpleRope.ts"],"sourcesContent":["import { WRAP_MODES } from '@pixi/core';\nimport { Mesh, MeshMaterial } from '@pixi/mesh';\nimport { RopeGeometry } from './geometry/RopeGeometry';\n\nimport type { IPoint, Renderer, Texture } from '@pixi/core';\n\n/**\n * The rope allows you to draw a texture across several points and then manipulate these points\n * @example\n * import { Point, SimpleRope, Texture } from 'pixi.js';\n *\n * for (let i = 0; i < 20; i++) {\n *     points.push(new Point(i * 50, 0));\n * };\n * const rope = new SimpleRope(Texture.from('snake.png'), points);\n * @memberof PIXI\n */\nexport class SimpleRope extends Mesh\n{\n    public autoUpdate: boolean;\n\n    /**\n     * Note: The wrap mode of the texture is set to REPEAT if `textureScale` is positive.\n     * @param texture - The texture to use on the rope.\n     * @param points - An array of {@link PIXI.Point} objects to construct this rope.\n     * @param {number} textureScale - Optional. Positive values scale rope texture\n     * keeping its aspect ratio. You can reduce alpha channel artifacts by providing a larger texture\n     * and downsampling here. If set to zero, texture will be stretched instead.\n     */\n    constructor(texture: Texture, points: IPoint[], textureScale = 0)\n    {\n        const ropeGeometry = new RopeGeometry(texture.height, points, textureScale);\n        const meshMaterial = new MeshMaterial(texture);\n\n        if (textureScale > 0)\n        {\n            // attempt to set UV wrapping, will fail on non-power of two textures\n            texture.baseTexture.wrapMode = WRAP_MODES.REPEAT;\n        }\n        super(ropeGeometry, meshMaterial);\n\n        /**\n         * re-calculate vertices by rope points each frame\n         * @member {boolean}\n         */\n        this.autoUpdate = true;\n    }\n\n    _render(renderer: Renderer): void\n    {\n        const geometry: RopeGeometry = this.geometry as any;\n\n        if (this.autoUpdate || geometry._width !== this.shader.texture.height)\n        {\n            geometry._width = this.shader.texture.height;\n            geometry.update();\n        }\n\n        super._render(renderer);\n    }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}