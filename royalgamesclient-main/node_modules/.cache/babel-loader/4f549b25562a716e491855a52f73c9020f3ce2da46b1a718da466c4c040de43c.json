{"ast":null,"code":"import { ExtensionType, Texture, extensions } from '@pixi/core';\nconst cacheTextureArray = {\n  extension: ExtensionType.CacheParser,\n  test: asset => Array.isArray(asset) && asset.every(t => t instanceof Texture),\n  getCacheableAssets: (keys, asset) => {\n    const out = {};\n    keys.forEach(key => {\n      asset.forEach((item, i) => {\n        out[key + (i === 0 ? \"\" : i + 1)] = item;\n      });\n    });\n    return out;\n  }\n};\nextensions.add(cacheTextureArray);\nexport { cacheTextureArray };","map":{"version":3,"mappings":";AAIO,MAAMA,iBAA4C;EACrDC,WAAWC,aAAc;EAEzBC,IAAM,EAACC,KAAiB,UAAMC,OAAQ,MAAK,CAAK,UAAMC,KAAM,CAACC,CAAM,iBAAaC,OAAO;EAEvFC,oBAAoBA,CAACC,MAAgBN,KACrC;IACI,MAAMO,MAA+B,EAAC;IAEjCD,aAASE,GACd;MACUR,cAAQ,CAACS,MAAeC,CAC9B;QACIH,IAAIC,GAAO,UAAM,CAAI,QAAKE,IAAI,CAAM;MAAA,CACvC;IAAA,CACJ;IAEM;EAAA;AAEf;AAEAC,WAAWC,IAAIhB,iBAAiB","names":["cacheTextureArray","extension","ExtensionType","test","asset","isArray","every","t","Texture","getCacheableAssets","keys","out","key","item","i","extensions","add"],"sources":["/workspaces/royalgames/royalgamesclient-main/node_modules/@pixi/assets/src/cache/parsers/cacheTextureArray.ts"],"sourcesContent":["import { extensions, ExtensionType, Texture } from '@pixi/core';\n\nimport type { CacheParser } from '../CacheParser';\n\nexport const cacheTextureArray: CacheParser<Texture[]> = {\n    extension: ExtensionType.CacheParser,\n\n    test: (asset: any[]) => Array.isArray(asset) && asset.every((t) => t instanceof Texture),\n\n    getCacheableAssets: (keys: string[], asset: Texture[]) =>\n    {\n        const out: Record<string, Texture> = {};\n\n        keys.forEach((key: string) =>\n        {\n            asset.forEach((item: Texture, i: number) =>\n            {\n                out[key + (i === 0 ? '' : i + 1)] = item;\n            });\n        });\n\n        return out;\n    }\n};\n\nextensions.add(cacheTextureArray);\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}