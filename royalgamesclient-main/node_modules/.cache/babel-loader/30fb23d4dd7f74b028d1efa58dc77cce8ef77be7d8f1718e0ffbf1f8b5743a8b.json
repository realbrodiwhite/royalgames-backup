{"ast":null,"code":"import { url } from '../url.mjs';\nlet tempAnchor;\nfunction determineCrossOrigin(url$1) {\n  let loc = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : globalThis.location;\n  if (url$1.startsWith(\"data:\")) {\n    return \"\";\n  }\n  loc = loc || globalThis.location;\n  if (!tempAnchor) {\n    tempAnchor = document.createElement(\"a\");\n  }\n  tempAnchor.href = url$1;\n  const parsedUrl = url.parse(tempAnchor.href);\n  const samePort = !parsedUrl.port && loc.port === \"\" || parsedUrl.port === loc.port;\n  if (parsedUrl.hostname !== loc.hostname || !samePort || parsedUrl.protocol !== loc.protocol) {\n    return \"anonymous\";\n  }\n  return \"\";\n}\nexport { determineCrossOrigin };","map":{"version":3,"mappings":";AAEA,IAAIA;AAYiC,qCACrC;EAAA,IADkDC,GAAgB,kFAAWC,QAC7E;EAEQ,UAAIC,UAAW,QAAO,CAC1B;IACW;EAAA;EAIXF,MAAMA,OAAOG,UAAW;EAExB,IAAI,CAACJ,UACL;IACiBA,sBAASK,cAAc,GAAG;EAAA;EAM3CL,WAAWM,IAAO;EAClB,MAAMC,SAAY,OAAKC,KAAM,YAAWF,IAAI;EAEtC,iBAAY,CAACC,SAAU,SAAQN,IAAIQ,IAAS,WAAQF,SAAU,UAASN,GAAI;EAG7E,cAAUS,aAAaT,GAAI,aAAY,CAACU,QAAY,cAAUC,QAAa,SAAIA,QACnF;IACW;EAAA;EAGJ;AACX","names":["tempAnchor","loc","location","startsWith","globalThis","createElement","href","parsedUrl","parse","port","hostname","samePort","protocol"],"sources":["/workspaces/royalgames/royalgamesclient-main/node_modules/@pixi/utils/src/network/determineCrossOrigin.ts"],"sourcesContent":["import { url as _url } from '../url';\n\nlet tempAnchor: HTMLAnchorElement | undefined;\n\n/**\n * Sets the `crossOrigin` property for this resource based on if the url\n * for this resource is cross-origin. If crossOrigin was manually set, this\n * function does nothing.\n * Nipped from the resource loader!\n * @ignore\n * @param {string} url - The url to test.\n * @param {object} [loc=window.location] - The location object to test against.\n * @returns {string} The crossOrigin value to use (or empty string for none).\n */\nexport function determineCrossOrigin(url: string, loc: Location = globalThis.location): string\n{\n    // data: and javascript: urls are considered same-origin\n    if (url.startsWith('data:'))\n    {\n        return '';\n    }\n\n    // default is window.location\n    loc = loc || globalThis.location;\n\n    if (!tempAnchor)\n    {\n        tempAnchor = document.createElement('a');\n    }\n\n    // let the browser determine the full href for the url of this resource and then\n    // parse with the node url lib, we can't use the properties of the anchor element\n    // because they don't work in IE9 :(\n    tempAnchor.href = url;\n    const parsedUrl = _url.parse(tempAnchor.href);\n\n    const samePort = (!parsedUrl.port && loc.port === '') || (parsedUrl.port === loc.port);\n\n    // if cross origin\n    if (parsedUrl.hostname !== loc.hostname || !samePort || parsedUrl.protocol !== loc.protocol)\n    {\n        return 'anonymous';\n    }\n\n    return '';\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}