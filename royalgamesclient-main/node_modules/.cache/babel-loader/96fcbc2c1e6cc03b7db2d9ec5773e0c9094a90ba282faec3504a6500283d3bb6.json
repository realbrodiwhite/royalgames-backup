{"ast":null,"code":"function removeItems(arr, startIdx, removeCount) {\n  const length = arr.length;\n  let i;\n  if (startIdx >= length || removeCount === 0) {\n    return;\n  }\n  removeCount = startIdx + removeCount > length ? length - startIdx : removeCount;\n  const len = length - removeCount;\n  for (i = startIdx; i < len; ++i) {\n    arr[i] = arr[i + removeCount];\n  }\n  arr.length = len;\n}\nexport { removeItems };","map":{"version":3,"mappings":"AAQ4B,0BAAYA,UAAkBC,WAC1D;EACI,MAAMC,SAASC,GAAI;EACf;EAEA,gBAAYD,MAAU,oBAAgB,CAC1C;IACI;EAAA;EAGJD,cAAeD,QAAW,iBAAcE,MAAS,YAASF,QAAW;EAErE,MAAMI,MAAMF,MAAS;EAErB,KAAKG,CAAI,aAAUA,CAAI,QAAK,EAAEA,CAC9B;IACQF,SAAKA,IAAIE,CAAI;EAAA;EAGrBF,IAAID,MAAS;AACjB","names":["startIdx","removeCount","length","arr","len","i"],"sources":["/workspaces/royalgames/royalgamesclient-main/node_modules/@pixi/utils/src/data/removeItems.ts"],"sourcesContent":["/**\n * Remove items from a javascript array without generating garbage\n * @function removeItems\n * @memberof PIXI.utils\n * @param {Array<any>} arr - Array to remove elements from\n * @param {number} startIdx - starting index\n * @param {number} removeCount - how many to remove\n */\nexport function removeItems(arr: any[], startIdx: number, removeCount: number): void\n{\n    const length = arr.length;\n    let i;\n\n    if (startIdx >= length || removeCount === 0)\n    {\n        return;\n    }\n\n    removeCount = (startIdx + removeCount > length ? length - startIdx : removeCount);\n\n    const len = length - removeCount;\n\n    for (i = startIdx; i < len; ++i)\n    {\n        arr[i] = arr[i + removeCount];\n    }\n\n    arr.length = len;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}