{"ast":null,"code":"import { mapSize } from './mapSize.mjs';\nimport { mapType } from './mapType.mjs';\nfunction getAttributeData(program, gl) {\n  const attributes = {};\n  const totalAttributes = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n  for (let i = 0; i < totalAttributes; i++) {\n    const attribData = gl.getActiveAttrib(program, i);\n    if (attribData.name.startsWith(\"gl_\")) {\n      continue;\n    }\n    const type = mapType(gl, attribData.type);\n    const data = {\n      type,\n      name: attribData.name,\n      size: mapSize(type),\n      location: gl.getAttribLocation(program, attribData.name)\n    };\n    attributes[attribData.name] = data;\n  }\n  return attributes;\n}\nexport { getAttributeData };","map":{"version":3,"mappings":";;AAYO,0BAA0BA,SAAuBC,EACxD;EACI,MAAMC,aAA8C,EAAC;EAErD,MAAMC,eAAkB,MAAGC,mBAAoB,UAASH,GAAGI,iBAAiB;EAE5E,SAASC,CAAI,MAAGA,CAAI,oBAAiBA,CACrC;IACI,MAAMC,UAAa,MAAGC,eAAgB,UAASF,CAAC;IAEhD,IAAIC,UAAW,MAAKE,UAAW,MAAK,CACpC;MACI;IAAA;IAGJ,MAAMC,IAAO,WAAQT,EAAI,aAAWS,IAAI;IACxC,MAAMC,IAAO;MACTD;MACAE,MAAML,UAAW;MACjBM,MAAMC,QAAQJ,IAAI;MAClBK,QAAU,KAAGC,iBAAkB,UAAST,WAAWK,IAAI;IAAA,CAC3D;IAEAV,WAAWK,WAAWK,IAAQ;EAAA;EAG3B;AACX","names":["program","gl","attributes","totalAttributes","getProgramParameter","ACTIVE_ATTRIBUTES","i","attribData","getActiveAttrib","startsWith","type","data","name","size","mapSize","location","getAttribLocation"],"sources":["/workspaces/royalgames/royalgamesclient-main/node_modules/@pixi/core/src/shader/utils/getAttributeData.ts"],"sourcesContent":["import { mapSize } from './mapSize';\nimport { mapType } from './mapType';\n\nimport type { IAttributeData } from '../Program';\n\n/**\n * returns the attribute data from the program\n * @private\n * @param {WebGLProgram} [program] - the WebGL program\n * @param {WebGLRenderingContext} [gl] - the WebGL context\n * @returns {object} the attribute data for this program\n */\nexport function getAttributeData(program: WebGLProgram, gl: WebGLRenderingContextBase): {[key: string]: IAttributeData}\n{\n    const attributes: {[key: string]: IAttributeData} = {};\n\n    const totalAttributes = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n\n    for (let i = 0; i < totalAttributes; i++)\n    {\n        const attribData = gl.getActiveAttrib(program, i);\n\n        if (attribData.name.startsWith('gl_'))\n        {\n            continue;\n        }\n\n        const type = mapType(gl, attribData.type);\n        const data = {\n            type,\n            name: attribData.name,\n            size: mapSize(type),\n            location: gl.getAttribLocation(program, attribData.name),\n        };\n\n        attributes[attribData.name] = data;\n    }\n\n    return attributes;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}