{"ast":null,"code":"import { DisplayObject, Container } from '@pixi/display';\nDisplayObject.prototype.name = null;\nContainer.prototype.getChildByName = function getChildByName(name, deep) {\n  for (let i = 0, j = this.children.length; i < j; i++) {\n    if (this.children[i].name === name) {\n      return this.children[i];\n    }\n  }\n  if (deep) {\n    for (let i = 0, j = this.children.length; i < j; i++) {\n      const child = this.children[i];\n      if (!child.getChildByName) {\n        continue;\n      }\n      const target = child.getChildByName(name, true);\n      if (target) {\n        return target;\n      }\n    }\n  }\n  return null;\n};","map":{"version":3,"mappings":";AAQAA,cAAcC,UAAUC,IAAO;AAY/BC,UAAUF,SAAU,kBAAiB,SACjCG,qBACAC,IAEJ;EACa,aAAI,GAAGC,CAAI,QAAKC,SAASC,MAAQ,MAAIF,GAAGG,CACjD;IACI,IAAI,IAAK,UAASA,CAAG,WAASP,IAC9B;MACI,OAAO,KAAKK,QAAS;IAAA;EACzB;EAGJ,IAAIF,IACJ;IACa,aAAI,GAAGC,CAAI,QAAKC,SAASC,MAAQ,MAAIF,GAAGG,CACjD;MACU,cAAS,KAAKF,QAAS;MAEzB,KAACG,MAAMN,cACX;QACI;MAAA;MAGJ,MAAMO,MAAS,SAAMP,cAAkB,OAAM,IAAI;MAEjD,IAAIO,MACJ;QACW;MAAA;IACX;EACJ;EAGG;AACX","names":["DisplayObject","prototype","name","Container","getChildByName","deep","j","children","length","i","child","target"],"sources":["/workspaces/royalgames/royalgamesclient-main/node_modules/@pixi/mixin-get-child-by-name/src/index.ts"],"sourcesContent":["/// <reference path=\"../global.d.ts\" />\nimport { Container, DisplayObject } from '@pixi/display';\n\n/**\n * The instance name of the object.\n * @memberof PIXI.DisplayObject#\n * @member {string} name\n */\nDisplayObject.prototype.name = null;\n\n/**\n * Returns the display object in the container.\n *\n * Recursive searches are done in a preorder traversal.\n * @method getChildByName\n * @memberof PIXI.Container#\n * @param {string} name - Instance name.\n * @param {boolean}[deep=false] - Whether to search recursively\n * @returns {PIXI.DisplayObject} The child with the specified name.\n */\nContainer.prototype.getChildByName = function getChildByName<T extends DisplayObject = DisplayObject>(\n    name: string,\n    deep?: boolean,\n): T\n{\n    for (let i = 0, j = this.children.length; i < j; i++)\n    {\n        if (this.children[i].name === name)\n        {\n            return this.children[i];\n        }\n    }\n\n    if (deep)\n    {\n        for (let i = 0, j = this.children.length; i < j; i++)\n        {\n            const child = (this.children[i] as Container);\n\n            if (!child.getChildByName)\n            {\n                continue;\n            }\n\n            const target = child.getChildByName<T>(name, true);\n\n            if (target)\n            {\n                return target;\n            }\n        }\n    }\n\n    return null;\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}