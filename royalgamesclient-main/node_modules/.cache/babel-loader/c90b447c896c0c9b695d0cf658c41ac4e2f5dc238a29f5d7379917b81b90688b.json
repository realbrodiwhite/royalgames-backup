{"ast":null,"code":"import { PRECISION } from '@pixi/constants';\nfunction setPrecision(src, requestedPrecision, maxSupportedPrecision) {\n  if (src.substring(0, 9) !== \"precision\") {\n    let precision = requestedPrecision;\n    if (requestedPrecision === PRECISION.HIGH && maxSupportedPrecision !== PRECISION.HIGH) {\n      precision = PRECISION.MEDIUM;\n    }\n    return \"precision \".concat(precision, \" float;\\n\").concat(src);\n  } else if (maxSupportedPrecision !== PRECISION.HIGH && src.substring(0, 15) === \"precision highp\") {\n    return src.replace(\"precision highp\", \"precision mediump\");\n  }\n  return src;\n}\nexport { setPrecision };","map":{"version":3,"mappings":";AAW6B,2BAAaA,oBAA+BC,qBACzE;EACI,IAAIC,GAAI,WAAU,CAAG,GAAC,MAAM,WAC5B;IAEI,IAAIC,SAAY;IAGhB,IAAIH,kBAAuB,eAAUI,IAAQ,8BAA0BC,UAAUD,IACjF;MACID,YAAYE,SAAU;IAAA;IAG1B,2BAAoBF,+BAAqBD;EAAA,CAC7C,UACSD,0BAA0BI,SAAU,SAAQH,IAAII,SAAU,IAAG,EAAE,MAAM,iBAC9E;IAEW,WAAIC,OAAQ,oBAAmB,mBAAmB;EAAA;EAGtD;AACX","names":["requestedPrecision","maxSupportedPrecision","src","precision","HIGH","PRECISION","substring","replace"],"sources":["/workspaces/royalgames/royalgamesclient-main/node_modules/@pixi/core/src/shader/utils/setPrecision.ts"],"sourcesContent":["import { PRECISION } from '@pixi/constants';\n\n/**\n * Sets the float precision on the shader, ensuring the device supports the request precision.\n * If the precision is already present, it just ensures that the device is able to handle it.\n * @private\n * @param {string} src - The shader source\n * @param {PIXI.PRECISION} requestedPrecision - The request float precision of the shader.\n * @param {PIXI.PRECISION} maxSupportedPrecision - The maximum precision the shader supports.\n * @returns {string} modified shader source\n */\nexport function setPrecision(src: string, requestedPrecision: PRECISION, maxSupportedPrecision: PRECISION): string\n{\n    if (src.substring(0, 9) !== 'precision')\n    {\n        // no precision supplied, so PixiJS will add the requested level.\n        let precision = requestedPrecision;\n\n        // If highp is requested but not supported, downgrade precision to a level all devices support.\n        if (requestedPrecision === PRECISION.HIGH && maxSupportedPrecision !== PRECISION.HIGH)\n        {\n            precision = PRECISION.MEDIUM;\n        }\n\n        return `precision ${precision} float;\\n${src}`;\n    }\n    else if (maxSupportedPrecision !== PRECISION.HIGH && src.substring(0, 15) === 'precision highp')\n    {\n        // precision was supplied, but at a level this device does not support, so downgrading to mediump.\n        return src.replace('precision highp', 'precision mediump');\n    }\n\n    return src;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}