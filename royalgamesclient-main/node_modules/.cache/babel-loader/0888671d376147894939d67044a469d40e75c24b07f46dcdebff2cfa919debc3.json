{"ast":null,"code":"import { ENV } from '@pixi/constants';\nimport { settings } from '@pixi/settings';\nconst unknownContext = {};\nlet context = unknownContext;\nfunction getTestContext() {\n  var _context;\n  if (context === unknownContext || (_context = context) !== null && _context !== void 0 && _context.isContextLost()) {\n    const canvas = settings.ADAPTER.createCanvas();\n    let gl;\n    if (settings.PREFER_ENV >= ENV.WEBGL2) {\n      gl = canvas.getContext(\"webgl2\", {});\n    }\n    if (!gl) {\n      gl = canvas.getContext(\"webgl\", {}) || canvas.getContext(\"experimental-webgl\", {});\n      if (!gl) {\n        gl = null;\n      } else {\n        gl.getExtension(\"WEBGL_draw_buffers\");\n      }\n    }\n    context = gl;\n  }\n  return context;\n}\nexport { getTestContext };","map":{"version":3,"mappings":";;AAGA,MAAMA,iBAAiB,EAAC;AACxB,IAAIC,OAA0D;AAS9D;EAAA;EACI,IAAIA,OAAY,mCAAkBA,OAAS,qCAATC,SAASC,eAC3C;IACU,eAASC,QAAS,SAAQC,YAAa;IAEzC;IAEA,aAASC,UAAc,QAAIC,MAC/B;MACIC,KAAKC,MAAO,YAAW,QAAU,IAAE;IAAA;IAGvC,IAAI,CAACD,EACL;MACUA,YAAOE,UAAW,UAAS,EAAE,KAC3BD,MAAO,YAAW,oBAAsB,IAAE;MAElD,IAAI,CAACD,EACL;QAESA;MAAA,CAGT;QAEIA,GAAGG,aAAa,oBAAoB;MAAA;IACxC;IAGMV;EAAA;EAGP;AACX","names":["unknownContext","context","_context","isContextLost","settings","createCanvas","PREFER_ENV","WEBGL2","gl","canvas","getContext","getExtension"],"sources":["/workspaces/royalgames/royalgamesclient-main/node_modules/@pixi/core/src/shader/utils/getTestContext.ts"],"sourcesContent":["import { ENV } from '@pixi/constants';\nimport { settings } from '@pixi/settings';\n\nconst unknownContext = {};\nlet context: WebGLRenderingContext | WebGL2RenderingContext = unknownContext as any;\n\n/**\n * returns a little WebGL context to use for program inspection.\n * @static\n * @private\n * @returns {WebGLRenderingContext} a gl context to test with\n */\nexport function getTestContext(): WebGLRenderingContext | WebGL2RenderingContext\n{\n    if (context === unknownContext || context?.isContextLost())\n    {\n        const canvas = settings.ADAPTER.createCanvas();\n\n        let gl: WebGLRenderingContext | WebGL2RenderingContext;\n\n        if (settings.PREFER_ENV >= ENV.WEBGL2)\n        {\n            gl = canvas.getContext('webgl2', {});\n        }\n\n        if (!gl)\n        {\n            gl = (canvas.getContext('webgl', {})\n                || (canvas.getContext('experimental-webgl', {}) as WebGLRenderingContext));\n\n            if (!gl)\n            {\n                // fail, not able to get a context\n                gl = null;\n            }\n            else\n            {\n                // for shader testing..\n                gl.getExtension('WEBGL_draw_buffers');\n            }\n        }\n\n        context = gl;\n    }\n\n    return context;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}