{"ast":null,"code":"class AbstractMaskSystem {\n  constructor(renderer) {\n    this.renderer = renderer;\n    this.maskStack = [];\n    this.glConst = 0;\n  }\n  getStackLength() {\n    return this.maskStack.length;\n  }\n  setMaskStack(maskStack) {\n    const {\n      gl\n    } = this.renderer;\n    const curStackLen = this.getStackLength();\n    this.maskStack = maskStack;\n    const newStackLen = this.getStackLength();\n    if (newStackLen !== curStackLen) {\n      if (newStackLen === 0) {\n        gl.disable(this.glConst);\n      } else {\n        gl.enable(this.glConst);\n        this._useCurrent();\n      }\n    }\n  }\n  _useCurrent() {}\n  destroy() {\n    this.renderer = null;\n    this.maskStack = null;\n  }\n}\nexport { AbstractMaskSystem };","map":{"version":3,"mappings":"AAQO,MAAMA,kBACb;EAiBIC,YAAYC,QACZ;IACI,KAAKA,QAAW;IAEhB,KAAKC,YAAY,EAAC;IAClB,KAAKC,OAAU;EAAA;EAInBC,cACAA;IACI,OAAO,KAAKF,SAAU;EAAA;EAO1BG,aAAaH,SACb;IACU;MAAEI;IAAA,IAAO,IAAK;IACd,oBAAc,KAAKF,cAAe;IAExC,KAAKF,SAAY;IAEX,oBAAc,KAAKE,cAAe;IAExC,IAAIG,gBAAgBC,WACpB;MACI,IAAID,gBAAgB,CACpB;QACOD,WAAQ,KAAKH,OAAO;MAAA,CAG3B;QACOG,UAAO,KAAKH,OAAO;QACtB,KAAKM,WAAY;MAAA;IACrB;EACJ;EAOJA,WACAA;EAKAC,OACAA;IACI,KAAKT,QAAW;IAChB,KAAKC,SAAY;EAAA;AAEzB","names":["AbstractMaskSystem","constructor","renderer","maskStack","glConst","getStackLength","setMaskStack","gl","newStackLen","curStackLen","_useCurrent","destroy"],"sources":["/workspaces/royalgames/royalgamesclient-main/node_modules/@pixi/core/src/mask/AbstractMaskSystem.ts"],"sourcesContent":["import type { Renderer } from '../Renderer';\nimport type { ISystem } from '../system/ISystem';\nimport type { MaskData } from './MaskData';\n\n/**\n * System plugin to the renderer to manage specific types of masking operations.\n * @memberof PIXI\n */\nexport class AbstractMaskSystem implements ISystem\n{\n    /**\n     * The mask stack\n     * @member {PIXI.MaskData[]}\n     */\n    protected maskStack: Array<MaskData>;\n\n    /**\n     * Constant for gl.enable\n     * @private\n     */\n    protected glConst: number;\n    protected renderer: Renderer;\n\n    /**\n     * @param renderer - The renderer this System works for.\n     */\n    constructor(renderer: Renderer)\n    {\n        this.renderer = renderer;\n\n        this.maskStack = [];\n        this.glConst = 0;\n    }\n\n    /** Gets count of masks of certain type. */\n    getStackLength(): number\n    {\n        return this.maskStack.length;\n    }\n\n    /**\n     * Changes the mask stack that is used by this System.\n     * @param {PIXI.MaskData[]} maskStack - The mask stack\n     */\n    setMaskStack(maskStack: Array<MaskData>): void\n    {\n        const { gl } = this.renderer;\n        const curStackLen = this.getStackLength();\n\n        this.maskStack = maskStack;\n\n        const newStackLen = this.getStackLength();\n\n        if (newStackLen !== curStackLen)\n        {\n            if (newStackLen === 0)\n            {\n                gl.disable(this.glConst);\n            }\n            else\n            {\n                gl.enable(this.glConst);\n                this._useCurrent();\n            }\n        }\n    }\n\n    /**\n     * Setup renderer to use the current mask data.\n     * @private\n     */\n    protected _useCurrent(): void\n    {\n        // OVERWRITE;\n    }\n\n    /** Destroys the mask stack. */\n    destroy(): void\n    {\n        this.renderer = null;\n        this.maskStack = null;\n    }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}