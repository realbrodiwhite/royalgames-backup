{"ast":null,"code":"import { BLEND_MODES } from '@pixi/constants';\nfunction mapWebGLBlendModesToPixi(gl) {\n  let array = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  array[BLEND_MODES.NORMAL] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n  array[BLEND_MODES.ADD] = [gl.ONE, gl.ONE];\n  array[BLEND_MODES.MULTIPLY] = [gl.DST_COLOR, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n  array[BLEND_MODES.SCREEN] = [gl.ONE, gl.ONE_MINUS_SRC_COLOR, gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n  array[BLEND_MODES.OVERLAY] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n  array[BLEND_MODES.DARKEN] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n  array[BLEND_MODES.LIGHTEN] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n  array[BLEND_MODES.COLOR_DODGE] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n  array[BLEND_MODES.COLOR_BURN] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n  array[BLEND_MODES.HARD_LIGHT] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n  array[BLEND_MODES.SOFT_LIGHT] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n  array[BLEND_MODES.DIFFERENCE] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n  array[BLEND_MODES.EXCLUSION] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n  array[BLEND_MODES.HUE] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n  array[BLEND_MODES.SATURATION] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n  array[BLEND_MODES.COLOR] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n  array[BLEND_MODES.LUMINOSITY] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n  array[BLEND_MODES.NONE] = [0, 0];\n  array[BLEND_MODES.NORMAL_NPM] = [gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n  array[BLEND_MODES.ADD_NPM] = [gl.SRC_ALPHA, gl.ONE, gl.ONE, gl.ONE];\n  array[BLEND_MODES.SCREEN_NPM] = [gl.SRC_ALPHA, gl.ONE_MINUS_SRC_COLOR, gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n  array[BLEND_MODES.SRC_IN] = [gl.DST_ALPHA, gl.ZERO];\n  array[BLEND_MODES.SRC_OUT] = [gl.ONE_MINUS_DST_ALPHA, gl.ZERO];\n  array[BLEND_MODES.SRC_ATOP] = [gl.DST_ALPHA, gl.ONE_MINUS_SRC_ALPHA];\n  array[BLEND_MODES.DST_OVER] = [gl.ONE_MINUS_DST_ALPHA, gl.ONE];\n  array[BLEND_MODES.DST_IN] = [gl.ZERO, gl.SRC_ALPHA];\n  array[BLEND_MODES.DST_OUT] = [gl.ZERO, gl.ONE_MINUS_SRC_ALPHA];\n  array[BLEND_MODES.DST_ATOP] = [gl.ONE_MINUS_DST_ALPHA, gl.SRC_ALPHA];\n  array[BLEND_MODES.XOR] = [gl.ONE_MINUS_DST_ALPHA, gl.ONE_MINUS_SRC_ALPHA];\n  array[BLEND_MODES.SUBTRACT] = [gl.ONE, gl.ONE, gl.ONE, gl.ONE, gl.FUNC_REVERSE_SUBTRACT, gl.FUNC_ADD];\n  return array;\n}\nexport { mapWebGLBlendModesToPixi };","map":{"version":3,"mappings":";AAWyC,sCACzC;EAAA,IADwEA,KAAoB,yEAC5F;EAGIA,MAAMC,YAAYC,MAAU,KAACC,EAAG,MAAKA,GAAGC,mBAAmB;EAC3DJ,MAAMC,YAAYI,GAAO,KAACF,EAAG,MAAKA,GAAGG,GAAG;EAClCN,kBAAYO,QAAY,KAACJ,EAAG,YAAWA,GAAGC,mBAAqB,KAAGE,GAAK,KAAGF,mBAAmB;EAC7FJ,kBAAYQ,MAAU,KAACL,EAAG,MAAKA,GAAGM,mBAAqB,KAAGH,GAAK,KAAGF,mBAAmB;EAC3FJ,MAAMC,YAAYS,OAAW,KAACP,EAAG,MAAKA,GAAGC,mBAAmB;EAC5DJ,MAAMC,YAAYU,MAAU,KAACR,EAAG,MAAKA,GAAGC,mBAAmB;EAC3DJ,MAAMC,YAAYW,OAAW,KAACT,EAAG,MAAKA,GAAGC,mBAAmB;EAC5DJ,MAAMC,YAAYY,WAAe,KAACV,EAAG,MAAKA,GAAGC,mBAAmB;EAChEJ,MAAMC,YAAYa,UAAc,KAACX,EAAG,MAAKA,GAAGC,mBAAmB;EAC/DJ,MAAMC,YAAYc,UAAc,KAACZ,EAAG,MAAKA,GAAGC,mBAAmB;EAC/DJ,MAAMC,YAAYe,UAAc,KAACb,EAAG,MAAKA,GAAGC,mBAAmB;EAC/DJ,MAAMC,YAAYgB,UAAc,KAACd,EAAG,MAAKA,GAAGC,mBAAmB;EAC/DJ,MAAMC,YAAYiB,SAAa,KAACf,EAAG,MAAKA,GAAGC,mBAAmB;EAC9DJ,MAAMC,YAAYkB,GAAO,KAAChB,EAAG,MAAKA,GAAGC,mBAAmB;EACxDJ,MAAMC,YAAYmB,UAAc,KAACjB,EAAG,MAAKA,GAAGC,mBAAmB;EAC/DJ,MAAMC,YAAYoB,KAAS,KAAClB,EAAG,MAAKA,GAAGC,mBAAmB;EAC1DJ,MAAMC,YAAYqB,UAAc,KAACnB,EAAG,MAAKA,GAAGC,mBAAmB;EAC/DJ,MAAMC,WAAY,SAAQ,CAAC,GAAG,CAAC;EAGzBD,kBAAYuB,UAAc,KAACpB,EAAG,YAAWA,GAAGC,mBAAqB,KAAGE,GAAK,KAAGF,mBAAmB;EAC/FJ,kBAAYwB,OAAW,KAACrB,EAAG,YAAWA,GAAGG,GAAK,KAAGA,GAAK,KAAGA,GAAG;EAC5DN,kBAAYyB,UAAc,KAACtB,EAAG,YAAWA,GAAGM,mBAAqB,KAAGH,GAAK,KAAGF,mBAAmB;EAGrGJ,MAAMC,YAAYyB,MAAU,KAACvB,EAAG,YAAWA,GAAGwB,IAAI;EAClD3B,MAAMC,YAAY2B,OAAW,KAACzB,EAAG,sBAAqBA,GAAGwB,IAAI;EAC7D3B,MAAMC,YAAY4B,QAAY,KAAC1B,EAAG,YAAWA,GAAGC,mBAAmB;EACnEJ,MAAMC,YAAY6B,QAAY,KAAC3B,EAAG,sBAAqBA,GAAGG,GAAG;EAC7DN,MAAMC,YAAY8B,MAAU,KAAC5B,EAAG,OAAMA,GAAG6B,SAAS;EAClDhC,MAAMC,YAAYgC,OAAW,KAAC9B,EAAG,OAAMA,GAAGC,mBAAmB;EAC7DJ,MAAMC,YAAYiC,QAAY,KAAC/B,EAAG,sBAAqBA,GAAG6B,SAAS;EACnEhC,MAAMC,YAAYkC,GAAO,KAAChC,EAAG,sBAAqBA,GAAGC,mBAAmB;EAGxEJ,MAAMC,WAAY,aAAY,CAACE,GAAGG,KAAKH,EAAG,MAAKA,EAAG,MAAKA,EAAG,MAAKA,EAAG,wBAAuBA,GAAGiC,QAAQ;EAE7F;AACX","names":["array","BLEND_MODES","NORMAL","gl","ONE_MINUS_SRC_ALPHA","ADD","ONE","MULTIPLY","SCREEN","ONE_MINUS_SRC_COLOR","OVERLAY","DARKEN","LIGHTEN","COLOR_DODGE","COLOR_BURN","HARD_LIGHT","SOFT_LIGHT","DIFFERENCE","EXCLUSION","HUE","SATURATION","COLOR","LUMINOSITY","NORMAL_NPM","ADD_NPM","SCREEN_NPM","SRC_IN","ZERO","SRC_OUT","SRC_ATOP","DST_OVER","DST_IN","SRC_ALPHA","DST_OUT","DST_ATOP","XOR","FUNC_ADD"],"sources":["/workspaces/royalgames/royalgamesclient-main/node_modules/@pixi/core/src/state/utils/mapWebGLBlendModesToPixi.ts"],"sourcesContent":["import { BLEND_MODES } from '@pixi/constants';\n\n/**\n * Maps gl blend combinations to WebGL.\n * @memberof PIXI\n * @function mapWebGLBlendModesToPixi\n * @private\n * @param {WebGLRenderingContext} gl - The rendering context.\n * @param {number[][]} [array=[]] - The array to output into.\n * @returns {number[][]} Mapped modes.\n */\nexport function mapWebGLBlendModesToPixi(gl: WebGLRenderingContextBase, array: number[][] = []): number[][]\n{\n    // TODO - premultiply alpha would be different.\n    // add a boolean for that!\n    array[BLEND_MODES.NORMAL] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.ADD] = [gl.ONE, gl.ONE];\n    array[BLEND_MODES.MULTIPLY] = [gl.DST_COLOR, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.SCREEN] = [gl.ONE, gl.ONE_MINUS_SRC_COLOR, gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.OVERLAY] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.DARKEN] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.LIGHTEN] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.COLOR_DODGE] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.COLOR_BURN] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.HARD_LIGHT] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.SOFT_LIGHT] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.DIFFERENCE] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.EXCLUSION] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.HUE] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.SATURATION] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.COLOR] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.LUMINOSITY] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.NONE] = [0, 0];\n\n    // not-premultiplied blend modes\n    array[BLEND_MODES.NORMAL_NPM] = [gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.ADD_NPM] = [gl.SRC_ALPHA, gl.ONE, gl.ONE, gl.ONE];\n    array[BLEND_MODES.SCREEN_NPM] = [gl.SRC_ALPHA, gl.ONE_MINUS_SRC_COLOR, gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n\n    // composite operations\n    array[BLEND_MODES.SRC_IN] = [gl.DST_ALPHA, gl.ZERO];\n    array[BLEND_MODES.SRC_OUT] = [gl.ONE_MINUS_DST_ALPHA, gl.ZERO];\n    array[BLEND_MODES.SRC_ATOP] = [gl.DST_ALPHA, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.DST_OVER] = [gl.ONE_MINUS_DST_ALPHA, gl.ONE];\n    array[BLEND_MODES.DST_IN] = [gl.ZERO, gl.SRC_ALPHA];\n    array[BLEND_MODES.DST_OUT] = [gl.ZERO, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.DST_ATOP] = [gl.ONE_MINUS_DST_ALPHA, gl.SRC_ALPHA];\n    array[BLEND_MODES.XOR] = [gl.ONE_MINUS_DST_ALPHA, gl.ONE_MINUS_SRC_ALPHA];\n\n    // SUBTRACT from flash\n    array[BLEND_MODES.SUBTRACT] = [gl.ONE, gl.ONE, gl.ONE, gl.ONE, gl.FUNC_REVERSE_SUBTRACT, gl.FUNC_ADD];\n\n    return array;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}