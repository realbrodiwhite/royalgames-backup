{"ast":null,"code":"import { getCanvasBoundingBox } from './getCanvasBoundingBox.mjs';\nfunction trimCanvas(canvas) {\n  const boundingBox = getCanvasBoundingBox(canvas);\n  const {\n    width,\n    height\n  } = boundingBox;\n  let data = null;\n  if (!boundingBox.isEmpty()) {\n    const context = canvas.getContext(\"2d\");\n    if (context === null) {\n      throw new TypeError(\"Failed to get canvas 2D context\");\n    }\n    data = context.getImageData(boundingBox.left, boundingBox.top, width, height);\n  }\n  return {\n    width,\n    height,\n    data\n  };\n}\nexport { trimCanvas };","map":{"version":3,"mappings":";AAUO,oBAAoBA,MAC3B;EACU,oBAAcC,qBAAqBD,MAAM;EACzC;IAAEE;IAAOC;EAAW;EAC1B,IAAIC,IAAO;EAEP,KAACC,WAAY,UACjB;IACU,gBAAUL,MAAO,YAAW,IAAI;IAEtC,IAAIM,YAAY,IAChB;MACU,UAAIC,UAAU,iCAAiC;IAAA;IAGzDH,OAAOE,QAAQE,YACX,aAAYC,MACZJ,WAAY,MACZH,OACAC,MACJ;EAAA;EAGG;IAAED,KAAO;IAAAC;IAAQC;EAAK;AACjC","names":["canvas","getCanvasBoundingBox","width","height","data","boundingBox","context","TypeError","getImageData","left"],"sources":["/workspaces/royalgames/royalgamesclient-main/node_modules/@pixi/utils/src/media/trimCanvas.ts"],"sourcesContent":["import { getCanvasBoundingBox } from './getCanvasBoundingBox';\n\nimport type { ICanvas } from '@pixi/settings';\n\n/**\n * Trim transparent borders from a canvas.\n * @memberof PIXI.utils\n * @param {PIXI.ICanvas} canvas - The canvas to trim.\n * @returns The trimmed canvas data.\n */\nexport function trimCanvas(canvas: ICanvas): { width: number, height: number, data: ImageData | null }\n{\n    const boundingBox = getCanvasBoundingBox(canvas);\n    const { width, height } = boundingBox;\n    let data = null;\n\n    if (!boundingBox.isEmpty())\n    {\n        const context = canvas.getContext('2d');\n\n        if (context === null)\n        {\n            throw new TypeError('Failed to get canvas 2D context');\n        }\n\n        data = context.getImageData(\n            boundingBox.left,\n            boundingBox.top,\n            width,\n            height\n        );\n    }\n\n    return { width, height, data };\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}