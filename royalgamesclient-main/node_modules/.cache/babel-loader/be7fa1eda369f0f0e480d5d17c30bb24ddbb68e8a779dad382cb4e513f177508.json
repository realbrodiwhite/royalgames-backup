{"ast":null,"code":"class CountLimiter {\n  constructor(maxItemsPerFrame) {\n    this.maxItemsPerFrame = maxItemsPerFrame;\n    this.itemsLeft = 0;\n  }\n  beginFrame() {\n    this.itemsLeft = this.maxItemsPerFrame;\n  }\n  allowedToUpload() {\n    return this.itemsLeft-- > 0;\n  }\n}\nexport { CountLimiter };","map":{"version":3,"mappings":"AAKO,MAAMA,YACb;EAUIC,YAAYC,gBACZ;IACI,KAAKA,gBAAmB;IACxB,KAAKC,SAAY;EAAA;EAIrBC,UACAA;IACI,KAAKD,YAAY,IAAK;EAAA;EAO1BE,eACAA;IACI,OAAO,KAAKF,SAAc;EAAA;AAElC","names":["CountLimiter","constructor","maxItemsPerFrame","itemsLeft","beginFrame","allowedToUpload"],"sources":["/workspaces/royalgames/royalgamesclient-main/node_modules/@pixi/prepare/src/CountLimiter.ts"],"sourcesContent":["/**\n * CountLimiter limits the number of items handled by a {@link PIXI.BasePrepare} to a specified\n * number of items per frame.\n * @memberof PIXI\n */\nexport class CountLimiter\n{\n    /** The maximum number of items that can be prepared each frame. */\n    public maxItemsPerFrame: number;\n\n    /** The number of items that can be prepared in the current frame. */\n    public itemsLeft: number;\n\n    /**\n     * @param maxItemsPerFrame - The maximum number of items that can be prepared each frame.\n     */\n    constructor(maxItemsPerFrame: number)\n    {\n        this.maxItemsPerFrame = maxItemsPerFrame;\n        this.itemsLeft = 0;\n    }\n\n    /** Resets any counting properties to start fresh on a new frame. */\n    beginFrame(): void\n    {\n        this.itemsLeft = this.maxItemsPerFrame;\n    }\n\n    /**\n     * Checks to see if another item can be uploaded. This should only be called once per item.\n     * @returns If the item is allowed to be uploaded.\n     */\n    allowedToUpload(): boolean\n    {\n        return this.itemsLeft-- > 0;\n    }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}