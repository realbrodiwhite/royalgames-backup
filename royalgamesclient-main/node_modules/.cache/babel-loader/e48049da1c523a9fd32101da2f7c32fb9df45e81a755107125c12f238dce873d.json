{"ast":null,"code":"import { settings } from '@pixi/core';\nimport { XMLFormat } from './XMLFormat.mjs';\nclass XMLStringFormat {\n  static test(data) {\n    if (typeof data === \"string\" && data.includes(\"<font>\")) {\n      return XMLFormat.test(settings.ADAPTER.parseXML(data));\n    }\n    return false;\n  }\n  static parse(xmlTxt) {\n    return XMLFormat.parse(settings.ADAPTER.parseXML(xmlTxt));\n  }\n}\nexport { XMLStringFormat };","map":{"version":3,"mappings":";;AASO,MAAMA,eACb;EAMI,OAAOC,KAAKC,IACZ;IACI,IAAI,OAAOA,IAAS,iBAAYA,IAAK,UAAS,QAAQ,CACtD;MACI,OAAOC,UAAUF,IAAK,UAASG,OAAQ,UAASF,IAAI,CAAC;IAAA;IAGlD;EAAA;EAQX,OAAOG,MAAMC,MACb;IACI,OAAOH,UAAUE,KAAM,UAASD,OAAQ,UAASE,MAAM,CAAC;EAAA;AAEhE","names":["XMLStringFormat","test","data","XMLFormat","ADAPTER","parse","xmlTxt"],"sources":["/workspaces/royalgames/royalgamesclient-main/node_modules/@pixi/text-bitmap/src/formats/XMLStringFormat.ts"],"sourcesContent":["import { settings } from '@pixi/core';\nimport { XMLFormat } from './XMLFormat';\n\nimport type { BitmapFontData } from '../BitmapFontData';\n\n/**\n * BitmapFont format that's XML-based.\n * @private\n */\nexport class XMLStringFormat\n{\n    /**\n     * Check if resource refers to text xml font data.\n     * @param data\n     * @returns - True if resource could be treated as font data, false otherwise.\n     */\n    static test(data: unknown): boolean\n    {\n        if (typeof data === 'string' && data.includes('<font>'))\n        {\n            return XMLFormat.test(settings.ADAPTER.parseXML(data));\n        }\n\n        return false;\n    }\n\n    /**\n     * Convert the text XML into BitmapFontData that we can use.\n     * @param xmlTxt\n     * @returns - Data to use for BitmapFont\n     */\n    static parse(xmlTxt: string): BitmapFontData\n    {\n        return XMLFormat.parse(settings.ADAPTER.parseXML(xmlTxt));\n    }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}